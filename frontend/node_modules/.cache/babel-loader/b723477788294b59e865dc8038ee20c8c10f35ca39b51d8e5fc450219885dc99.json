{"ast":null,"code":"// API utility functions for communicating with backend services\nconst CLIENT_SERVICE_URL='http://localhost:8081';const APPOINTMENT_SERVICE_URL='http://localhost:8082';// Generic API call function\nasync function apiCall(url){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await fetch(url,{headers:{'Content-Type':'application/json',...options.headers},...options});if(!response.ok){const errorText=await response.text();throw new Error(`HTTP ${response.status}: ${errorText}`);}// Handle empty responses\nconst contentType=response.headers.get('content-type');if(contentType&&contentType.includes('application/json')){return await response.json();}return await response.text();}catch(error){console.error('API call failed:',error);throw error;}}// Client API functions\nexport async function fetchClients(){return apiCall(`${CLIENT_SERVICE_URL}/clients`);}export async function fetchClientById(id){return apiCall(`${CLIENT_SERVICE_URL}/clients/${id}`);}export async function searchClients(name){return apiCall(`${CLIENT_SERVICE_URL}/clients/search?name=${encodeURIComponent(name)}`);}export async function createClient(clientData){return apiCall(`${CLIENT_SERVICE_URL}/clients`,{method:'POST',body:JSON.stringify(clientData)});}export async function updateClient(id,clientData){return apiCall(`${CLIENT_SERVICE_URL}/clients/${id}`,{method:'PUT',body:JSON.stringify(clientData)});}export async function deleteClient(id){return apiCall(`${CLIENT_SERVICE_URL}/clients/${id}`,{method:'DELETE'});}export async function syncClients(){return apiCall(`${CLIENT_SERVICE_URL}/clients/sync`,{method:'POST'});}// Appointment API functions\nexport async function fetchAppointments(){return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments`);}export async function fetchUpcomingAppointments(){return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments/upcoming`);}export async function fetchTodaysAppointments(){return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments/today`);}export async function fetchAppointmentById(id){return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments/${id}`);}export async function fetchAppointmentsByClientId(clientId){return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments/client/${clientId}`);}export async function fetchAppointmentsByStatus(status){return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments/status/${status}`);}export async function fetchAppointmentsBetween(startTime,endTime){const params=new URLSearchParams({startTime:startTime,endTime:endTime});return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments/range?${params}`);}export async function createAppointment(appointmentData){return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments`,{method:'POST',body:JSON.stringify(appointmentData)});}export async function updateAppointment(id,appointmentData){return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments/${id}`,{method:'PUT',body:JSON.stringify(appointmentData)});}export async function cancelAppointment(id){return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments/${id}/cancel`,{method:'PATCH'});}export async function deleteAppointment(id){return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments/${id}`,{method:'DELETE'});}export async function syncAppointments(){return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments/sync`,{method:'POST'});}export async function getAppointmentCountByStatus(status){return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments/stats/count/${status}`);}// Utility functions\nexport function formatDateTime(dateTimeString){if(!dateTimeString)return'';try{const date=new Date(dateTimeString);return date.toLocaleString('en-US',{year:'numeric',month:'short',day:'numeric',hour:'2-digit',minute:'2-digit',hour12:true});}catch(error){console.error('Error formatting date:',error);return dateTimeString;}}export function formatDate(dateString){if(!dateString)return'';try{const date=new Date(dateString);return date.toLocaleDateString('en-US',{year:'numeric',month:'long',day:'numeric'});}catch(error){console.error('Error formatting date:',error);return dateString;}}export function formatTime(timeString){if(!timeString)return'';try{const date=new Date(timeString);return date.toLocaleTimeString('en-US',{hour:'2-digit',minute:'2-digit',hour12:true});}catch(error){console.error('Error formatting time:',error);return timeString;}}","map":{"version":3,"names":["CLIENT_SERVICE_URL","APPOINTMENT_SERVICE_URL","apiCall","url","options","arguments","length","undefined","response","fetch","headers","ok","errorText","text","Error","status","contentType","get","includes","json","error","console","fetchClients","fetchClientById","id","searchClients","name","encodeURIComponent","createClient","clientData","method","body","JSON","stringify","updateClient","deleteClient","syncClients","fetchAppointments","fetchUpcomingAppointments","fetchTodaysAppointments","fetchAppointmentById","fetchAppointmentsByClientId","clientId","fetchAppointmentsByStatus","fetchAppointmentsBetween","startTime","endTime","params","URLSearchParams","createAppointment","appointmentData","updateAppointment","cancelAppointment","deleteAppointment","syncAppointments","getAppointmentCountByStatus","formatDateTime","dateTimeString","date","Date","toLocaleString","year","month","day","hour","minute","hour12","formatDate","dateString","toLocaleDateString","formatTime","timeString","toLocaleTimeString"],"sources":["C:/ClinicManagement/wellness-clinic-management-system/frontend/src/utils/api.js"],"sourcesContent":["// API utility functions for communicating with backend services\r\n\r\nconst CLIENT_SERVICE_URL = 'http://localhost:8081';\r\nconst APPOINTMENT_SERVICE_URL = 'http://localhost:8082';\r\n\r\n// Generic API call function\r\nasync function apiCall(url, options = {}) {\r\n  try {\r\n    const response = await fetch(url, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...options.headers,\r\n      },\r\n      ...options,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      throw new Error(`HTTP ${response.status}: ${errorText}`);\r\n    }\r\n\r\n    // Handle empty responses\r\n    const contentType = response.headers.get('content-type');\r\n    if (contentType && contentType.includes('application/json')) {\r\n      return await response.json();\r\n    }\r\n    \r\n    return await response.text();\r\n  } catch (error) {\r\n    console.error('API call failed:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Client API functions\r\nexport async function fetchClients() {\r\n  return apiCall(`${CLIENT_SERVICE_URL}/clients`);\r\n}\r\n\r\nexport async function fetchClientById(id) {\r\n  return apiCall(`${CLIENT_SERVICE_URL}/clients/${id}`);\r\n}\r\n\r\nexport async function searchClients(name) {\r\n  return apiCall(`${CLIENT_SERVICE_URL}/clients/search?name=${encodeURIComponent(name)}`);\r\n}\r\n\r\nexport async function createClient(clientData) {\r\n  return apiCall(`${CLIENT_SERVICE_URL}/clients`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(clientData),\r\n  });\r\n}\r\n\r\nexport async function updateClient(id, clientData) {\r\n  return apiCall(`${CLIENT_SERVICE_URL}/clients/${id}`, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(clientData),\r\n  });\r\n}\r\n\r\nexport async function deleteClient(id) {\r\n  return apiCall(`${CLIENT_SERVICE_URL}/clients/${id}`, {\r\n    method: 'DELETE',\r\n  });\r\n}\r\n\r\nexport async function syncClients() {\r\n  return apiCall(`${CLIENT_SERVICE_URL}/clients/sync`, {\r\n    method: 'POST',\r\n  });\r\n}\r\n\r\n// Appointment API functions\r\nexport async function fetchAppointments() {\r\n  return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments`);\r\n}\r\n\r\nexport async function fetchUpcomingAppointments() {\r\n  return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments/upcoming`);\r\n}\r\n\r\nexport async function fetchTodaysAppointments() {\r\n  return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments/today`);\r\n}\r\n\r\nexport async function fetchAppointmentById(id) {\r\n  return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments/${id}`);\r\n}\r\n\r\nexport async function fetchAppointmentsByClientId(clientId) {\r\n  return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments/client/${clientId}`);\r\n}\r\n\r\nexport async function fetchAppointmentsByStatus(status) {\r\n  return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments/status/${status}`);\r\n}\r\n\r\nexport async function fetchAppointmentsBetween(startTime, endTime) {\r\n  const params = new URLSearchParams({\r\n    startTime: startTime,\r\n    endTime: endTime,\r\n  });\r\n  return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments/range?${params}`);\r\n}\r\n\r\nexport async function createAppointment(appointmentData) {\r\n  return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(appointmentData),\r\n  });\r\n}\r\n\r\nexport async function updateAppointment(id, appointmentData) {\r\n  return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments/${id}`, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(appointmentData),\r\n  });\r\n}\r\n\r\nexport async function cancelAppointment(id) {\r\n  return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments/${id}/cancel`, {\r\n    method: 'PATCH',\r\n  });\r\n}\r\n\r\nexport async function deleteAppointment(id) {\r\n  return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments/${id}`, {\r\n    method: 'DELETE',\r\n  });\r\n}\r\n\r\nexport async function syncAppointments() {\r\n  return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments/sync`, {\r\n    method: 'POST',\r\n  });\r\n}\r\n\r\nexport async function getAppointmentCountByStatus(status) {\r\n  return apiCall(`${APPOINTMENT_SERVICE_URL}/appointments/stats/count/${status}`);\r\n}\r\n\r\n// Utility functions\r\nexport function formatDateTime(dateTimeString) {\r\n  if (!dateTimeString) return '';\r\n  \r\n  try {\r\n    const date = new Date(dateTimeString);\r\n    return date.toLocaleString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      hour12: true,\r\n    });\r\n  } catch (error) {\r\n    console.error('Error formatting date:', error);\r\n    return dateTimeString;\r\n  }\r\n}\r\n\r\nexport function formatDate(dateString) {\r\n  if (!dateString) return '';\r\n  \r\n  try {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error formatting date:', error);\r\n    return dateString;\r\n  }\r\n}\r\n\r\nexport function formatTime(timeString) {\r\n  if (!timeString) return '';\r\n  \r\n  try {\r\n    const date = new Date(timeString);\r\n    return date.toLocaleTimeString('en-US', {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      hour12: true,\r\n    });\r\n  } catch (error) {\r\n    console.error('Error formatting time:', error);\r\n    return timeString;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}